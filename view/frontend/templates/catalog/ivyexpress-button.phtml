<?php

declare(strict_types=1);

use Magento\Catalog\Block\Product\View;

/** @var View $block */

$product = $block->getProduct();
$banner = $block->getBannerData();

?>

<button
    x-show="isVisible"
    x-init="initButton()"
    x-data="initIvyPaymentCatalog()"
    @click="submit()"
    type="button"
    class="ivy-checkout-button ivy-product-button"
    data-cart-value="<?= $product->getFinalPrice() ?>"
    data-shop-category="<?= $banner->getMcc() ?>"
    data-currency-code="<?= $product->getStore()->getCurrentCurrencyCode(); ?>"
    data-locale="<?= $banner->getLocale() ?>"
    style="visibility: hidden; display:none"
>
</button>
<script>
    function initIvyPaymentCatalog() {
        return {
            isVisible: false,

            initButton() {
                this.isVisible = true;
                window.initIvyButton();
            },

            submit() {
                const addToCartForm = document.getElementById('product_addtocart_form');
                if (addToCartForm.reportValidity()) {
                    this.ajaxSubmit(addToCartForm);
                }
            },

            async initExpress() {
                const linkUrl = window.BASE_URL + "ivypayment/checkout/index/express/1";

                await fetch(linkUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                })
                    .then((response) => response.json())
                    .then((result) => {
                        const { redirectUrl } = result;
                        if (Object.prototype.hasOwnProperty.call(window, 'startIvyCheckout')) {
                            window.startIvyCheckout(redirectUrl, 'popup');
                        }
                    })
                    .catch((error) => {
                        dispatchMessages([
                            {
                                type: "error",
                                text: error
                            }
                        ]);
                    });
            },

            async ajaxSubmit(form) {
                await fetch(form.action, {
                    method: 'POST',
                    body: new URLSearchParams(Array.from(new FormData(form))).toString(),
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                }).then(res => {
                    if (res.status === 200) {
                        this.initExpress();
                    }
                    window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                })
            },
        }
    }
</script>
